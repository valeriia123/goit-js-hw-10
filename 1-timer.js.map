{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n  \n  const buttonStart = document.querySelector('button');\n  const inputEl = document.querySelector('input');\n  const divEls = document.querySelectorAll('.field');\n  const timerContainer = document.querySelector('.timer');\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] < Date.now()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future'\n            })\n            buttonStart.disabled = true;\n        } else {\n            buttonStart.disabled = false;\n            userSelectedDate.deadline = selectedDates[0];\n      }\n    }\n};\nbuttonStart.disabled = true;\n  flatpickr(inputEl, options);\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n      return {\n          days,\n          hours,\n          minutes,\n          seconds\n      }\n}\n  \n  console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n    \n  // ==== STYLES ==== //\n  timerContainer.style.display = 'flex';\n  timerContainer.style.gap = '15px';\n  timerContainer.style.marginTop = '20px';\n  \n  divEls.forEach(el => {\n      el.style.display = 'flex';\n      el.style.flexDirection = 'column';\n      el.style.gap = '3px';\n    });\n    // ==== STYLES ==== //\n    \n    \nlet userSelectedDate = {\n    deadline: null,\n    intervalId: null,\n    elements: {\n        days: document.querySelector('[data-days]'),\n        hours: document.querySelector('[data-hours]'),\n        minutes: document.querySelector('[data-minutes]'),\n        seconds: document.querySelector('[data-seconds]'),\n    },\n\n    start() {\n        if (!this.deadline) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future'\n            });\n            return;\n        }\n\n        inputEl.disabled = true;\n        buttonStart.disabled = true;\n        this.intervalId = setInterval(() => {\n            const diff = this.deadline - Date.now();\n\n            if (diff <= 0) {\n                this.stop();\n                inputEl.disabled = false;\n                return;\n            }\n\n            const timerComponents = convertMs(diff);\n\n            this.elements.days.textContent = this.pad(timerComponents.days);\n            this.elements.hours.textContent = this.pad(timerComponents.hours);\n            this.elements.minutes.textContent = this.pad(timerComponents.minutes);\n            this.elements.seconds.textContent = this.pad(timerComponents.seconds);\n        }, 1000);\n    },\n\n    stop() {\n        clearInterval(this.intervalId);\n    },\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n};\nbuttonStart.addEventListener('click', () => userSelectedDate.start());\n"],"names":["buttonStart","inputEl","divEls","timerContainer","options","selectedDates","iziToast","userSelectedDate","flatpickr","convertMs","ms","days","hours","minutes","seconds","el","diff","timerComponents","value"],"mappings":"2GAUE,MAAMA,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAU,SAAS,cAAc,OAAO,EACxCC,EAAS,SAAS,iBAAiB,QAAQ,EAC3CC,EAAiB,SAAS,cAAc,QAAQ,EAElDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC3BC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACZ,CAAA,EACDN,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBO,EAAiB,SAAWF,EAAc,CAAC,EAEvD,CACA,EACAL,EAAY,SAAW,GACrBQ,EAAUP,EAASG,CAAO,EAE1B,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAEhE,MAAO,CACH,KAAAC,EACA,MAAAC,EACA,QAAAC,EACA,QAAAC,CACV,CACA,CAEE,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAI/BN,EAAe,MAAM,QAAU,OAC/BA,EAAe,MAAM,IAAM,OAC3BA,EAAe,MAAM,UAAY,OAEjCD,EAAO,QAAQa,GAAM,CACjBA,EAAG,MAAM,QAAU,OACnBA,EAAG,MAAM,cAAgB,SACzBA,EAAG,MAAM,IAAM,KACrB,CAAK,EAIL,IAAIR,EAAmB,CACnB,SAAU,KACV,WAAY,KACZ,SAAU,CACN,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACnD,EAED,OAAQ,CACJ,GAAI,CAAC,KAAK,SAAU,CAChBD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACD,MACZ,CAEQL,EAAQ,SAAW,GACnBD,EAAY,SAAW,GACvB,KAAK,WAAa,YAAY,IAAM,CAChC,MAAMgB,EAAO,KAAK,SAAW,KAAK,IAAK,EAEvC,GAAIA,GAAQ,EAAG,CACX,KAAK,KAAM,EACXf,EAAQ,SAAW,GACnB,MAChB,CAEY,MAAMgB,EAAkBR,EAAUO,CAAI,EAEtC,KAAK,SAAS,KAAK,YAAc,KAAK,IAAIC,EAAgB,IAAI,EAC9D,KAAK,SAAS,MAAM,YAAc,KAAK,IAAIA,EAAgB,KAAK,EAChE,KAAK,SAAS,QAAQ,YAAc,KAAK,IAAIA,EAAgB,OAAO,EACpE,KAAK,SAAS,QAAQ,YAAc,KAAK,IAAIA,EAAgB,OAAO,CACvE,EAAE,GAAI,CACV,EAED,MAAO,CACH,cAAc,KAAK,UAAU,CAChC,EAED,IAAIC,EAAO,CACP,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CAC5C,CACA,EACAlB,EAAY,iBAAiB,QAAS,IAAMO,EAAiB,MAAK,CAAE"}